/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package build.mypayquicker.platform.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Balance type.
 */
public class Balance {
    private String formattedAmount;
    private double amount;
    private CurrencyTypesEnum currency;
    private String token;

    /**
     * Default constructor.
     */
    public Balance() {
    }

    /**
     * Initialization constructor.
     * @param  amount  double value for amount.
     * @param  currency  CurrencyTypesEnum value for currency.
     * @param  formattedAmount  String value for formattedAmount.
     * @param  token  String value for token.
     */
    public Balance(
            double amount,
            CurrencyTypesEnum currency,
            String formattedAmount,
            String token) {
        this.formattedAmount = formattedAmount;
        this.amount = amount;
        this.currency = currency;
        this.token = token;
    }

    /**
     * Getter for FormattedAmount.
     * Formatted monetary amount
     * @return Returns the String
     */
    @JsonGetter("formattedAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFormattedAmount() {
        return formattedAmount;
    }

    /**
     * Setter for FormattedAmount.
     * Formatted monetary amount
     * @param formattedAmount Value for String
     */
    @JsonSetter("formattedAmount")
    public void setFormattedAmount(String formattedAmount) {
        this.formattedAmount = formattedAmount;
    }

    /**
     * Getter for Amount.
     * Amount of the transfer in the specified currency.
     * @return Returns the double
     */
    @JsonGetter("amount")
    public double getAmount() {
        return amount;
    }

    /**
     * Setter for Amount.
     * Amount of the transfer in the specified currency.
     * @param amount Value for double
     */
    @JsonSetter("amount")
    public void setAmount(double amount) {
        this.amount = amount;
    }

    /**
     * Getter for Currency.
     * Currency code type for the object
     * @return Returns the CurrencyTypesEnum
     */
    @JsonGetter("currency")
    public CurrencyTypesEnum getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * Currency code type for the object
     * @param currency Value for CurrencyTypesEnum
     */
    @JsonSetter("currency")
    public void setCurrency(CurrencyTypesEnum currency) {
        this.currency = currency;
    }

    /**
     * Getter for Token.
     * Token representing the resource, prefixed with &lt;i&gt;user-&lt;/i&gt;, &lt;i&gt;dest-&lt;/i&gt;, &lt;i&gt;xfer-&lt;/i&gt;,
     * &lt;i&gt;acct-&lt;/i&gt;, &lt;i&gt;pmnt-&lt;/i&gt;, or &lt;i&gt;docu-&lt;/i&gt;.
     * @return Returns the String
     */
    @JsonGetter("token")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getToken() {
        return token;
    }

    /**
     * Setter for Token.
     * Token representing the resource, prefixed with &lt;i&gt;user-&lt;/i&gt;, &lt;i&gt;dest-&lt;/i&gt;, &lt;i&gt;xfer-&lt;/i&gt;,
     * &lt;i&gt;acct-&lt;/i&gt;, &lt;i&gt;pmnt-&lt;/i&gt;, or &lt;i&gt;docu-&lt;/i&gt;.
     * @param token Value for String
     */
    @JsonSetter("token")
    public void setToken(String token) {
        this.token = token;
    }

    /**
     * Converts this Balance into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Balance [" + "amount=" + amount + ", currency=" + currency + ", formattedAmount="
                + formattedAmount + ", token=" + token + "]";
    }

    /**
     * Builds a new {@link Balance.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Balance.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(amount, currency)
                .formattedAmount(getFormattedAmount())
                .token(getToken());
        return builder;
    }

    /**
     * Class to build instances of {@link Balance}.
     */
    public static class Builder {
        private double amount;
        private CurrencyTypesEnum currency;
        private String formattedAmount;
        private String token;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  amount  double value for amount.
         * @param  currency  CurrencyTypesEnum value for currency.
         */
        public Builder(double amount, CurrencyTypesEnum currency) {
            this.amount = amount;
            this.currency = currency;
        }

        /**
         * Setter for amount.
         * @param  amount  double value for amount.
         * @return Builder
         */
        public Builder amount(double amount) {
            this.amount = amount;
            return this;
        }

        /**
         * Setter for currency.
         * @param  currency  CurrencyTypesEnum value for currency.
         * @return Builder
         */
        public Builder currency(CurrencyTypesEnum currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for formattedAmount.
         * @param  formattedAmount  String value for formattedAmount.
         * @return Builder
         */
        public Builder formattedAmount(String formattedAmount) {
            this.formattedAmount = formattedAmount;
            return this;
        }

        /**
         * Setter for token.
         * @param  token  String value for token.
         * @return Builder
         */
        public Builder token(String token) {
            this.token = token;
            return this;
        }

        /**
         * Builds a new {@link Balance} object using the set fields.
         * @return {@link Balance}
         */
        public Balance build() {
            return new Balance(amount, currency, formattedAmount, token);
        }
    }
}
