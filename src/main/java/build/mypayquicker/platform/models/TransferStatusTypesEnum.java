/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package build.mypayquicker.platform.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * TransferStatusTypesEnum to be used.
 */
public enum TransferStatusTypesEnum {
    QUOTED,

    PENDING,

    SCHEDULED,

    COMPLETED,

    CANCELLED,

    RETURNED,

    FAILED,

    EXPIRED,

    VERIFICATION_HOLD;


    private static TreeMap<String, TransferStatusTypesEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        QUOTED.value = "QUOTED";
        PENDING.value = "PENDING";
        SCHEDULED.value = "SCHEDULED";
        COMPLETED.value = "COMPLETED";
        CANCELLED.value = "CANCELLED";
        RETURNED.value = "RETURNED";
        FAILED.value = "FAILED";
        EXPIRED.value = "EXPIRED";
        VERIFICATION_HOLD.value = "VERIFICATION_HOLD";

        valueMap.put("QUOTED", QUOTED);
        valueMap.put("PENDING", PENDING);
        valueMap.put("SCHEDULED", SCHEDULED);
        valueMap.put("COMPLETED", COMPLETED);
        valueMap.put("CANCELLED", CANCELLED);
        valueMap.put("RETURNED", RETURNED);
        valueMap.put("FAILED", FAILED);
        valueMap.put("EXPIRED", EXPIRED);
        valueMap.put("VERIFICATION_HOLD", VERIFICATION_HOLD);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static TransferStatusTypesEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of TransferStatusTypesEnum values to list of string values.
     * @param toConvert The list of TransferStatusTypesEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<TransferStatusTypesEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (TransferStatusTypesEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 