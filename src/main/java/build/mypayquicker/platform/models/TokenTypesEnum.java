/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package build.mypayquicker.platform.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * TokenTypesEnum to be used.
 */
public enum TokenTypesEnum {
    BANK_ACCOUNT,

    TRANSFER,

    PAYMENT,

    SPEND_BACK,

    PREPAID_CARD,

    USER,

    DOCUMENT,

    ACCOUNT;


    private static TreeMap<String, TokenTypesEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        BANK_ACCOUNT.value = "BANK_ACCOUNT";
        TRANSFER.value = "TRANSFER";
        PAYMENT.value = "PAYMENT";
        SPEND_BACK.value = "SPEND_BACK";
        PREPAID_CARD.value = "PREPAID_CARD";
        USER.value = "USER";
        DOCUMENT.value = "DOCUMENT";
        ACCOUNT.value = "ACCOUNT";

        valueMap.put("BANK_ACCOUNT", BANK_ACCOUNT);
        valueMap.put("TRANSFER", TRANSFER);
        valueMap.put("PAYMENT", PAYMENT);
        valueMap.put("SPEND_BACK", SPEND_BACK);
        valueMap.put("PREPAID_CARD", PREPAID_CARD);
        valueMap.put("USER", USER);
        valueMap.put("DOCUMENT", DOCUMENT);
        valueMap.put("ACCOUNT", ACCOUNT);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static TokenTypesEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of TokenTypesEnum values to list of string values.
     * @param toConvert The list of TokenTypesEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<TokenTypesEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (TokenTypesEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 