/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package build.mypayquicker.platform.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for IdentityVerificationDispositionType type.
 */
public class IdentityVerificationDispositionType {
    private IdentityVerificationDispositionTypesEnum idvDispostion;

    /**
     * Default constructor.
     */
    public IdentityVerificationDispositionType() {
    }

    /**
     * Initialization constructor.
     * @param  idvDispostion  IdentityVerificationDispositionTypesEnum value for idvDispostion.
     */
    public IdentityVerificationDispositionType(
            IdentityVerificationDispositionTypesEnum idvDispostion) {
        this.idvDispostion = idvDispostion;
    }

    /**
     * Getter for IdvDispostion.
     * In combination with the &lt;i&gt;Disposition&lt;/i&gt; type, the &lt;i&gt;Result&lt;/i&gt; type provides the results
     * of an IDV check. A &lt;i&gt;Dispositioned&lt;/i&gt; result of &lt;i&gt;FINAL PASS&lt;/i&gt; represents a passing
     * check, whereas a &lt;i&gt;TRANSIENT FAIL&lt;/i&gt; is still being processed but has failed at least one
     * phase of the check. Until the disposition is &lt;i&gt;FINAL&lt;/i&gt;, a result has not been determined.
     * @return Returns the IdentityVerificationDispositionTypesEnum
     */
    @JsonGetter("idvDispostion")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public IdentityVerificationDispositionTypesEnum getIdvDispostion() {
        return idvDispostion;
    }

    /**
     * Setter for IdvDispostion.
     * In combination with the &lt;i&gt;Disposition&lt;/i&gt; type, the &lt;i&gt;Result&lt;/i&gt; type provides the results
     * of an IDV check. A &lt;i&gt;Dispositioned&lt;/i&gt; result of &lt;i&gt;FINAL PASS&lt;/i&gt; represents a passing
     * check, whereas a &lt;i&gt;TRANSIENT FAIL&lt;/i&gt; is still being processed but has failed at least one
     * phase of the check. Until the disposition is &lt;i&gt;FINAL&lt;/i&gt;, a result has not been determined.
     * @param idvDispostion Value for IdentityVerificationDispositionTypesEnum
     */
    @JsonSetter("idvDispostion")
    public void setIdvDispostion(IdentityVerificationDispositionTypesEnum idvDispostion) {
        this.idvDispostion = idvDispostion;
    }

    /**
     * Converts this IdentityVerificationDispositionType into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "IdentityVerificationDispositionType [" + "idvDispostion=" + idvDispostion + "]";
    }

    /**
     * Builds a new {@link IdentityVerificationDispositionType.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link IdentityVerificationDispositionType.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .idvDispostion(getIdvDispostion());
        return builder;
    }

    /**
     * Class to build instances of {@link IdentityVerificationDispositionType}.
     */
    public static class Builder {
        private IdentityVerificationDispositionTypesEnum idvDispostion;



        /**
         * Setter for idvDispostion.
         * @param  idvDispostion  IdentityVerificationDispositionTypesEnum value for idvDispostion.
         * @return Builder
         */
        public Builder idvDispostion(IdentityVerificationDispositionTypesEnum idvDispostion) {
            this.idvDispostion = idvDispostion;
            return this;
        }

        /**
         * Builds a new {@link IdentityVerificationDispositionType} object using the set fields.
         * @return {@link IdentityVerificationDispositionType}
         */
        public IdentityVerificationDispositionType build() {
            return new IdentityVerificationDispositionType(idvDispostion);
        }
    }
}
