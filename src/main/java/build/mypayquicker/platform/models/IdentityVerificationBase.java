/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package build.mypayquicker.platform.models;

import build.mypayquicker.platform.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;

/**
 * This is a model class for IdentityVerificationBase type.
 */
public class IdentityVerificationBase {
    private String idvProviderReference;
    private IdentityVerificationResultTypesEnum idvResult;
    private IdentityVerificationResultSubTypesEnum idvSubResult;
    private IdentityVerificationProviderTypesEnum idvProvider;
    private LocalDateTime createdOn;
    private String raw;
    private IdentityVerificationCheckTypesEnum idvCheckType;
    private IdentityVerificationDispositionTypesEnum idvDispostion;
    private String token;

    /**
     * Default constructor.
     */
    public IdentityVerificationBase() {
    }

    /**
     * Initialization constructor.
     * @param  idvProviderReference  String value for idvProviderReference.
     * @param  idvResult  IdentityVerificationResultTypesEnum value for idvResult.
     * @param  idvSubResult  IdentityVerificationResultSubTypesEnum value for idvSubResult.
     * @param  idvProvider  IdentityVerificationProviderTypesEnum value for idvProvider.
     * @param  createdOn  LocalDateTime value for createdOn.
     * @param  raw  String value for raw.
     * @param  idvCheckType  IdentityVerificationCheckTypesEnum value for idvCheckType.
     * @param  idvDispostion  IdentityVerificationDispositionTypesEnum value for idvDispostion.
     * @param  token  String value for token.
     */
    public IdentityVerificationBase(
            String idvProviderReference,
            IdentityVerificationResultTypesEnum idvResult,
            IdentityVerificationResultSubTypesEnum idvSubResult,
            IdentityVerificationProviderTypesEnum idvProvider,
            LocalDateTime createdOn,
            String raw,
            IdentityVerificationCheckTypesEnum idvCheckType,
            IdentityVerificationDispositionTypesEnum idvDispostion,
            String token) {
        this.idvProviderReference = idvProviderReference;
        this.idvResult = idvResult;
        this.idvSubResult = idvSubResult;
        this.idvProvider = idvProvider;
        this.createdOn = createdOn;
        this.raw = raw;
        this.idvCheckType = idvCheckType;
        this.idvDispostion = idvDispostion;
        this.token = token;
    }

    /**
     * Getter for IdvProviderReference.
     * IDV provider unique ID for the IDV check performed
     * @return Returns the String
     */
    @JsonGetter("idvProviderReference")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIdvProviderReference() {
        return idvProviderReference;
    }

    /**
     * Setter for IdvProviderReference.
     * IDV provider unique ID for the IDV check performed
     * @param idvProviderReference Value for String
     */
    @JsonSetter("idvProviderReference")
    public void setIdvProviderReference(String idvProviderReference) {
        this.idvProviderReference = idvProviderReference;
    }

    /**
     * Getter for IdvResult.
     * In combination with the &lt;i&gt;Disposition&lt;/i&gt; type, the &lt;i&gt;Result&lt;/i&gt; type provides the results
     * of an IDV check. A &lt;i&gt;Dispositioned&lt;/i&gt; result of &lt;i&gt;FINAL PASS&lt;/i&gt; represents a passing
     * check, whereas a &lt;i&gt;TRANSIENT FAIL&lt;/i&gt; is still being processed but has failed at least one
     * phase of the check. Until the disposition is &lt;i&gt;FINAL&lt;/i&gt;, a result has not been determined.
     * @return Returns the IdentityVerificationResultTypesEnum
     */
    @JsonGetter("idvResult")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public IdentityVerificationResultTypesEnum getIdvResult() {
        return idvResult;
    }

    /**
     * Setter for IdvResult.
     * In combination with the &lt;i&gt;Disposition&lt;/i&gt; type, the &lt;i&gt;Result&lt;/i&gt; type provides the results
     * of an IDV check. A &lt;i&gt;Dispositioned&lt;/i&gt; result of &lt;i&gt;FINAL PASS&lt;/i&gt; represents a passing
     * check, whereas a &lt;i&gt;TRANSIENT FAIL&lt;/i&gt; is still being processed but has failed at least one
     * phase of the check. Until the disposition is &lt;i&gt;FINAL&lt;/i&gt;, a result has not been determined.
     * @param idvResult Value for IdentityVerificationResultTypesEnum
     */
    @JsonSetter("idvResult")
    public void setIdvResult(IdentityVerificationResultTypesEnum idvResult) {
        this.idvResult = idvResult;
    }

    /**
     * Getter for IdvSubResult.
     * If used by a provider, sub-results that give additional insight into the results, including
     * whether they result was &lt;i&gt;Soft&lt;/i&gt; or &lt;i&gt;Hard&lt;/i&gt;. &lt;i&gt;Soft&lt;/i&gt; results may have additional
     * recourse that can be leveraged to validate a user’s identity.
     * @return Returns the IdentityVerificationResultSubTypesEnum
     */
    @JsonGetter("idvSubResult")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public IdentityVerificationResultSubTypesEnum getIdvSubResult() {
        return idvSubResult;
    }

    /**
     * Setter for IdvSubResult.
     * If used by a provider, sub-results that give additional insight into the results, including
     * whether they result was &lt;i&gt;Soft&lt;/i&gt; or &lt;i&gt;Hard&lt;/i&gt;. &lt;i&gt;Soft&lt;/i&gt; results may have additional
     * recourse that can be leveraged to validate a user’s identity.
     * @param idvSubResult Value for IdentityVerificationResultSubTypesEnum
     */
    @JsonSetter("idvSubResult")
    public void setIdvSubResult(IdentityVerificationResultSubTypesEnum idvSubResult) {
        this.idvSubResult = idvSubResult;
    }

    /**
     * Getter for IdvProvider.
     * Provider types of verification that can be used for performing identity checks
     * @return Returns the IdentityVerificationProviderTypesEnum
     */
    @JsonGetter("idvProvider")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public IdentityVerificationProviderTypesEnum getIdvProvider() {
        return idvProvider;
    }

    /**
     * Setter for IdvProvider.
     * Provider types of verification that can be used for performing identity checks
     * @param idvProvider Value for IdentityVerificationProviderTypesEnum
     */
    @JsonSetter("idvProvider")
    public void setIdvProvider(IdentityVerificationProviderTypesEnum idvProvider) {
        this.idvProvider = idvProvider;
    }

    /**
     * Getter for CreatedOn.
     * Time at which the object was created.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("createdOn")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedOn() {
        return createdOn;
    }

    /**
     * Setter for CreatedOn.
     * Time at which the object was created.
     * @param createdOn Value for LocalDateTime
     */
    @JsonSetter("createdOn")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedOn(LocalDateTime createdOn) {
        this.createdOn = createdOn;
    }

    /**
     * Getter for Raw.
     * Contains the raw (unprocessed) output from the IDV provider. Format of the raw output can
     * vary widely and is not documented. *For reference/debugging only
     * @return Returns the String
     */
    @JsonGetter("raw")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRaw() {
        return raw;
    }

    /**
     * Setter for Raw.
     * Contains the raw (unprocessed) output from the IDV provider. Format of the raw output can
     * vary widely and is not documented. *For reference/debugging only
     * @param raw Value for String
     */
    @JsonSetter("raw")
    public void setRaw(String raw) {
        this.raw = raw;
    }

    /**
     * Getter for IdvCheckType.
     * Types of verification used for performing identity checks (&lt;i&gt;documentary&lt;/i&gt;,
     * &lt;i&gt;non-documentary&lt;/i&gt;, &lt;i&gt;OFAC&lt;/i&gt;, etc.)
     * @return Returns the IdentityVerificationCheckTypesEnum
     */
    @JsonGetter("idvCheckType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public IdentityVerificationCheckTypesEnum getIdvCheckType() {
        return idvCheckType;
    }

    /**
     * Setter for IdvCheckType.
     * Types of verification used for performing identity checks (&lt;i&gt;documentary&lt;/i&gt;,
     * &lt;i&gt;non-documentary&lt;/i&gt;, &lt;i&gt;OFAC&lt;/i&gt;, etc.)
     * @param idvCheckType Value for IdentityVerificationCheckTypesEnum
     */
    @JsonSetter("idvCheckType")
    public void setIdvCheckType(IdentityVerificationCheckTypesEnum idvCheckType) {
        this.idvCheckType = idvCheckType;
    }

    /**
     * Getter for IdvDispostion.
     * In combination with the &lt;i&gt;Disposition&lt;/i&gt; type, the &lt;i&gt;Result&lt;/i&gt; type provides the results
     * of an IDV check. A &lt;i&gt;Dispositioned&lt;/i&gt; result of &lt;i&gt;FINAL PASS&lt;/i&gt; represents a passing
     * check, whereas a &lt;i&gt;TRANSIENT FAIL&lt;/i&gt; is still being processed but has failed at least one
     * phase of the check. Until the disposition is &lt;i&gt;FINAL&lt;/i&gt;, a result has not been determined.
     * @return Returns the IdentityVerificationDispositionTypesEnum
     */
    @JsonGetter("idvDispostion")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public IdentityVerificationDispositionTypesEnum getIdvDispostion() {
        return idvDispostion;
    }

    /**
     * Setter for IdvDispostion.
     * In combination with the &lt;i&gt;Disposition&lt;/i&gt; type, the &lt;i&gt;Result&lt;/i&gt; type provides the results
     * of an IDV check. A &lt;i&gt;Dispositioned&lt;/i&gt; result of &lt;i&gt;FINAL PASS&lt;/i&gt; represents a passing
     * check, whereas a &lt;i&gt;TRANSIENT FAIL&lt;/i&gt; is still being processed but has failed at least one
     * phase of the check. Until the disposition is &lt;i&gt;FINAL&lt;/i&gt;, a result has not been determined.
     * @param idvDispostion Value for IdentityVerificationDispositionTypesEnum
     */
    @JsonSetter("idvDispostion")
    public void setIdvDispostion(IdentityVerificationDispositionTypesEnum idvDispostion) {
        this.idvDispostion = idvDispostion;
    }

    /**
     * Getter for Token.
     * Token representing the resource, prefixed with &lt;i&gt;user-&lt;/i&gt;, &lt;i&gt;dest-&lt;/i&gt;, &lt;i&gt;xfer-&lt;/i&gt;,
     * &lt;i&gt;acct-&lt;/i&gt;, &lt;i&gt;pmnt-&lt;/i&gt;, or &lt;i&gt;docu-&lt;/i&gt;.
     * @return Returns the String
     */
    @JsonGetter("token")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getToken() {
        return token;
    }

    /**
     * Setter for Token.
     * Token representing the resource, prefixed with &lt;i&gt;user-&lt;/i&gt;, &lt;i&gt;dest-&lt;/i&gt;, &lt;i&gt;xfer-&lt;/i&gt;,
     * &lt;i&gt;acct-&lt;/i&gt;, &lt;i&gt;pmnt-&lt;/i&gt;, or &lt;i&gt;docu-&lt;/i&gt;.
     * @param token Value for String
     */
    @JsonSetter("token")
    public void setToken(String token) {
        this.token = token;
    }

    /**
     * Converts this IdentityVerificationBase into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "IdentityVerificationBase [" + "idvProviderReference=" + idvProviderReference
                + ", idvResult=" + idvResult + ", idvSubResult=" + idvSubResult + ", idvProvider="
                + idvProvider + ", createdOn=" + createdOn + ", raw=" + raw + ", idvCheckType="
                + idvCheckType + ", idvDispostion=" + idvDispostion + ", token=" + token + "]";
    }

    /**
     * Builds a new {@link IdentityVerificationBase.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link IdentityVerificationBase.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .idvProviderReference(getIdvProviderReference())
                .idvResult(getIdvResult())
                .idvSubResult(getIdvSubResult())
                .idvProvider(getIdvProvider())
                .createdOn(getCreatedOn())
                .raw(getRaw())
                .idvCheckType(getIdvCheckType())
                .idvDispostion(getIdvDispostion())
                .token(getToken());
        return builder;
    }

    /**
     * Class to build instances of {@link IdentityVerificationBase}.
     */
    public static class Builder {
        private String idvProviderReference;
        private IdentityVerificationResultTypesEnum idvResult;
        private IdentityVerificationResultSubTypesEnum idvSubResult;
        private IdentityVerificationProviderTypesEnum idvProvider;
        private LocalDateTime createdOn;
        private String raw;
        private IdentityVerificationCheckTypesEnum idvCheckType;
        private IdentityVerificationDispositionTypesEnum idvDispostion;
        private String token;



        /**
         * Setter for idvProviderReference.
         * @param  idvProviderReference  String value for idvProviderReference.
         * @return Builder
         */
        public Builder idvProviderReference(String idvProviderReference) {
            this.idvProviderReference = idvProviderReference;
            return this;
        }

        /**
         * Setter for idvResult.
         * @param  idvResult  IdentityVerificationResultTypesEnum value for idvResult.
         * @return Builder
         */
        public Builder idvResult(IdentityVerificationResultTypesEnum idvResult) {
            this.idvResult = idvResult;
            return this;
        }

        /**
         * Setter for idvSubResult.
         * @param  idvSubResult  IdentityVerificationResultSubTypesEnum value for idvSubResult.
         * @return Builder
         */
        public Builder idvSubResult(IdentityVerificationResultSubTypesEnum idvSubResult) {
            this.idvSubResult = idvSubResult;
            return this;
        }

        /**
         * Setter for idvProvider.
         * @param  idvProvider  IdentityVerificationProviderTypesEnum value for idvProvider.
         * @return Builder
         */
        public Builder idvProvider(IdentityVerificationProviderTypesEnum idvProvider) {
            this.idvProvider = idvProvider;
            return this;
        }

        /**
         * Setter for createdOn.
         * @param  createdOn  LocalDateTime value for createdOn.
         * @return Builder
         */
        public Builder createdOn(LocalDateTime createdOn) {
            this.createdOn = createdOn;
            return this;
        }

        /**
         * Setter for raw.
         * @param  raw  String value for raw.
         * @return Builder
         */
        public Builder raw(String raw) {
            this.raw = raw;
            return this;
        }

        /**
         * Setter for idvCheckType.
         * @param  idvCheckType  IdentityVerificationCheckTypesEnum value for idvCheckType.
         * @return Builder
         */
        public Builder idvCheckType(IdentityVerificationCheckTypesEnum idvCheckType) {
            this.idvCheckType = idvCheckType;
            return this;
        }

        /**
         * Setter for idvDispostion.
         * @param  idvDispostion  IdentityVerificationDispositionTypesEnum value for idvDispostion.
         * @return Builder
         */
        public Builder idvDispostion(IdentityVerificationDispositionTypesEnum idvDispostion) {
            this.idvDispostion = idvDispostion;
            return this;
        }

        /**
         * Setter for token.
         * @param  token  String value for token.
         * @return Builder
         */
        public Builder token(String token) {
            this.token = token;
            return this;
        }

        /**
         * Builds a new {@link IdentityVerificationBase} object using the set fields.
         * @return {@link IdentityVerificationBase}
         */
        public IdentityVerificationBase build() {
            return new IdentityVerificationBase(idvProviderReference, idvResult, idvSubResult,
                    idvProvider, createdOn, raw, idvCheckType, idvDispostion, token);
        }
    }
}
