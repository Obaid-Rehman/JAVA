/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package build.mypayquicker.platform.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * OccupationTypesEnum to be used.
 */
public enum OccupationTypesEnum {
    INDEPENDENT_BUSINESS_OWNER,

    SCIENCE,

    TECHNOLOGY,

    ENGINEERING,

    MATH,

    HEALTHCARE,

    SOCIAL_SERVICES,

    MEDIA,

    FINANCE,

    GOVERNMENT,

    MANUFACTURING,

    LAW,

    HOSPITALITY_AND_TOURISM,

    ARTS,

    DESIGN,

    OFFICE_AND_ADMIN_SUPPORT,

    EDUCATION;


    private static TreeMap<String, OccupationTypesEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        INDEPENDENT_BUSINESS_OWNER.value = "INDEPENDENT_BUSINESS_OWNER";
        SCIENCE.value = "SCIENCE";
        TECHNOLOGY.value = "TECHNOLOGY";
        ENGINEERING.value = "ENGINEERING";
        MATH.value = "MATH";
        HEALTHCARE.value = "HEALTHCARE";
        SOCIAL_SERVICES.value = "SOCIAL_SERVICES";
        MEDIA.value = "MEDIA";
        FINANCE.value = "FINANCE";
        GOVERNMENT.value = "GOVERNMENT";
        MANUFACTURING.value = "MANUFACTURING";
        LAW.value = "LAW";
        HOSPITALITY_AND_TOURISM.value = "HOSPITALITY_AND_TOURISM";
        ARTS.value = "ARTS";
        DESIGN.value = "DESIGN";
        OFFICE_AND_ADMIN_SUPPORT.value = "OFFICE_AND_ADMIN_SUPPORT";
        EDUCATION.value = "EDUCATION";

        valueMap.put("INDEPENDENT_BUSINESS_OWNER", INDEPENDENT_BUSINESS_OWNER);
        valueMap.put("SCIENCE", SCIENCE);
        valueMap.put("TECHNOLOGY", TECHNOLOGY);
        valueMap.put("ENGINEERING", ENGINEERING);
        valueMap.put("MATH", MATH);
        valueMap.put("HEALTHCARE", HEALTHCARE);
        valueMap.put("SOCIAL_SERVICES", SOCIAL_SERVICES);
        valueMap.put("MEDIA", MEDIA);
        valueMap.put("FINANCE", FINANCE);
        valueMap.put("GOVERNMENT", GOVERNMENT);
        valueMap.put("MANUFACTURING", MANUFACTURING);
        valueMap.put("LAW", LAW);
        valueMap.put("HOSPITALITY_AND_TOURISM", HOSPITALITY_AND_TOURISM);
        valueMap.put("ARTS", ARTS);
        valueMap.put("DESIGN", DESIGN);
        valueMap.put("OFFICE_AND_ADMIN_SUPPORT", OFFICE_AND_ADMIN_SUPPORT);
        valueMap.put("EDUCATION", EDUCATION);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static OccupationTypesEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of OccupationTypesEnum values to list of string values.
     * @param toConvert The list of OccupationTypesEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<OccupationTypesEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (OccupationTypesEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 