/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package build.mypayquicker.platform.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

/**
 * BankAccountFieldTypesEnum to be used.
 */
public enum BankAccountFieldTypesEnum {
    BANK_ACH_ABA,

    BANK_BBAN,

    BANK_BRANCH_CODE,

    BANK_BSB_CODE,

    BANK_CITY,

    BANK_CLABE,

    BANK_CODE,

    BANK_CURP,

    BANK_IBAN,

    BANK_NAME,

    BANK_NON_SWIFT_BIC,

    BANK_NUBAN,

    BANK_PHONE_NUMBER,

    BANK_POSTAL_CODE,

    BANK_REGION,

    BANK_RFC,

    BANK_SORT_CODE,

    BANK_STREET_ADDRESS,

    BANK_SWIFT_BIC,

    BANK_TRANSIT_CODE,

    BENEFICIARY_ACCOUNT_NUMBER,

    BENEFICIARY_PHONE_NUMBER,

    BENEFICIARY_TAX_ID,

    BENEFICIARY_NAME,

    BANK_BRANCH_NAME,

    BANK_PURPOSE_OF_PAYMENT_CODE,

    BANK_VALUE_ADD_TAX;


    private static TreeMap<String, BankAccountFieldTypesEnum> valueMap = new TreeMap<>();
    private String value;

    static {
        BANK_ACH_ABA.value = "BANK_ACH_ABA";
        BANK_BBAN.value = "BANK_BBAN";
        BANK_BRANCH_CODE.value = "BANK_BRANCH_CODE";
        BANK_BSB_CODE.value = "BANK_BSB_CODE";
        BANK_CITY.value = "BANK_CITY";
        BANK_CLABE.value = "BANK_CLABE";
        BANK_CODE.value = "BANK_CODE";
        BANK_CURP.value = "BANK_CURP";
        BANK_IBAN.value = "BANK_IBAN";
        BANK_NAME.value = "BANK_NAME";
        BANK_NON_SWIFT_BIC.value = "BANK_NON_SWIFT_BIC";
        BANK_NUBAN.value = "BANK_NUBAN";
        BANK_PHONE_NUMBER.value = "BANK_PHONE_NUMBER";
        BANK_POSTAL_CODE.value = "BANK_POSTAL_CODE";
        BANK_REGION.value = "BANK_REGION";
        BANK_RFC.value = "BANK_RFC";
        BANK_SORT_CODE.value = "BANK_SORT_CODE";
        BANK_STREET_ADDRESS.value = "BANK_STREET_ADDRESS";
        BANK_SWIFT_BIC.value = "BANK_SWIFT_BIC";
        BANK_TRANSIT_CODE.value = "BANK_TRANSIT_CODE";
        BENEFICIARY_ACCOUNT_NUMBER.value = "BENEFICIARY_ACCOUNT_NUMBER";
        BENEFICIARY_PHONE_NUMBER.value = "BENEFICIARY_PHONE_NUMBER";
        BENEFICIARY_TAX_ID.value = "BENEFICIARY_TAX_ID";
        BENEFICIARY_NAME.value = "BENEFICIARY_NAME";
        BANK_BRANCH_NAME.value = "BANK_BRANCH_NAME";
        BANK_PURPOSE_OF_PAYMENT_CODE.value = "BANK_PURPOSE_OF_PAYMENT_CODE";
        BANK_VALUE_ADD_TAX.value = "BANK_VALUE_ADD_TAX";

        valueMap.put("BANK_ACH_ABA", BANK_ACH_ABA);
        valueMap.put("BANK_BBAN", BANK_BBAN);
        valueMap.put("BANK_BRANCH_CODE", BANK_BRANCH_CODE);
        valueMap.put("BANK_BSB_CODE", BANK_BSB_CODE);
        valueMap.put("BANK_CITY", BANK_CITY);
        valueMap.put("BANK_CLABE", BANK_CLABE);
        valueMap.put("BANK_CODE", BANK_CODE);
        valueMap.put("BANK_CURP", BANK_CURP);
        valueMap.put("BANK_IBAN", BANK_IBAN);
        valueMap.put("BANK_NAME", BANK_NAME);
        valueMap.put("BANK_NON_SWIFT_BIC", BANK_NON_SWIFT_BIC);
        valueMap.put("BANK_NUBAN", BANK_NUBAN);
        valueMap.put("BANK_PHONE_NUMBER", BANK_PHONE_NUMBER);
        valueMap.put("BANK_POSTAL_CODE", BANK_POSTAL_CODE);
        valueMap.put("BANK_REGION", BANK_REGION);
        valueMap.put("BANK_RFC", BANK_RFC);
        valueMap.put("BANK_SORT_CODE", BANK_SORT_CODE);
        valueMap.put("BANK_STREET_ADDRESS", BANK_STREET_ADDRESS);
        valueMap.put("BANK_SWIFT_BIC", BANK_SWIFT_BIC);
        valueMap.put("BANK_TRANSIT_CODE", BANK_TRANSIT_CODE);
        valueMap.put("BENEFICIARY_ACCOUNT_NUMBER", BENEFICIARY_ACCOUNT_NUMBER);
        valueMap.put("BENEFICIARY_PHONE_NUMBER", BENEFICIARY_PHONE_NUMBER);
        valueMap.put("BENEFICIARY_TAX_ID", BENEFICIARY_TAX_ID);
        valueMap.put("BENEFICIARY_NAME", BENEFICIARY_NAME);
        valueMap.put("BANK_BRANCH_NAME", BANK_BRANCH_NAME);
        valueMap.put("BANK_PURPOSE_OF_PAYMENT_CODE", BANK_PURPOSE_OF_PAYMENT_CODE);
        valueMap.put("BANK_VALUE_ADD_TAX", BANK_VALUE_ADD_TAX);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static BankAccountFieldTypesEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of BankAccountFieldTypesEnum values to list of string values.
     * @param toConvert The list of BankAccountFieldTypesEnum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<BankAccountFieldTypesEnum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (BankAccountFieldTypesEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 