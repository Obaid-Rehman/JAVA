/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package build.mypayquicker.platform.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for PaymentPurpose type.
 */
public class PaymentPurpose {
    private PaymentPurposeTypesEnum purpose;

    /**
     * Default constructor.
     */
    public PaymentPurpose() {
    }

    /**
     * Initialization constructor.
     * @param  purpose  PaymentPurposeTypesEnum value for purpose.
     */
    public PaymentPurpose(
            PaymentPurposeTypesEnum purpose) {
        this.purpose = purpose;
    }

    /**
     * Getter for Purpose.
     * Used to identify the purpose of a payment and impacts reporting and calculated taxable
     * earnings (if utilizing tax services)
     * @return Returns the PaymentPurposeTypesEnum
     */
    @JsonGetter("purpose")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PaymentPurposeTypesEnum getPurpose() {
        return purpose;
    }

    /**
     * Setter for Purpose.
     * Used to identify the purpose of a payment and impacts reporting and calculated taxable
     * earnings (if utilizing tax services)
     * @param purpose Value for PaymentPurposeTypesEnum
     */
    @JsonSetter("purpose")
    public void setPurpose(PaymentPurposeTypesEnum purpose) {
        this.purpose = purpose;
    }

    /**
     * Converts this PaymentPurpose into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PaymentPurpose [" + "purpose=" + purpose + "]";
    }

    /**
     * Builds a new {@link PaymentPurpose.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PaymentPurpose.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .purpose(getPurpose());
        return builder;
    }

    /**
     * Class to build instances of {@link PaymentPurpose}.
     */
    public static class Builder {
        private PaymentPurposeTypesEnum purpose;



        /**
         * Setter for purpose.
         * @param  purpose  PaymentPurposeTypesEnum value for purpose.
         * @return Builder
         */
        public Builder purpose(PaymentPurposeTypesEnum purpose) {
            this.purpose = purpose;
            return this;
        }

        /**
         * Builds a new {@link PaymentPurpose} object using the set fields.
         * @return {@link PaymentPurpose}
         */
        public PaymentPurpose build() {
            return new PaymentPurpose(purpose);
        }
    }
}
