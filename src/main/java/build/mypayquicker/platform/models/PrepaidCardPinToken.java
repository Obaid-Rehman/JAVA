/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package build.mypayquicker.platform.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for PrepaidCardPinToken type.
 */
public class PrepaidCardPinToken {
    private String cardPinToken;
    private String url;

    /**
     * Default constructor.
     */
    public PrepaidCardPinToken() {
    }

    /**
     * Initialization constructor.
     * @param  cardPinToken  String value for cardPinToken.
     * @param  url  String value for url.
     */
    public PrepaidCardPinToken(
            String cardPinToken,
            String url) {
        this.cardPinToken = cardPinToken;
        this.url = url;
    }

    /**
     * Getter for CardPinToken.
     * Token used as part of a two-leg card PIN reveal request sent directly from the client that
     * generally involves a second piece of data, such as the CVV code on the back of the card.
     * @return Returns the String
     */
    @JsonGetter("cardPinToken")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCardPinToken() {
        return cardPinToken;
    }

    /**
     * Setter for CardPinToken.
     * Token used as part of a two-leg card PIN reveal request sent directly from the client that
     * generally involves a second piece of data, such as the CVV code on the back of the card.
     * @param cardPinToken Value for String
     */
    @JsonSetter("cardPinToken")
    public void setCardPinToken(String cardPinToken) {
        this.cardPinToken = cardPinToken;
    }

    /**
     * Getter for Url.
     * Full path of the URI to perform the request action against a prepaid card that replaces the
     * need to build the URL with query params
     * @return Returns the String
     */
    @JsonGetter("url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * Full path of the URI to perform the request action against a prepaid card that replaces the
     * need to build the URL with query params
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Converts this PrepaidCardPinToken into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PrepaidCardPinToken [" + "cardPinToken=" + cardPinToken + ", url=" + url + "]";
    }

    /**
     * Builds a new {@link PrepaidCardPinToken.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PrepaidCardPinToken.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .cardPinToken(getCardPinToken())
                .url(getUrl());
        return builder;
    }

    /**
     * Class to build instances of {@link PrepaidCardPinToken}.
     */
    public static class Builder {
        private String cardPinToken;
        private String url;



        /**
         * Setter for cardPinToken.
         * @param  cardPinToken  String value for cardPinToken.
         * @return Builder
         */
        public Builder cardPinToken(String cardPinToken) {
            this.cardPinToken = cardPinToken;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Builds a new {@link PrepaidCardPinToken} object using the set fields.
         * @return {@link PrepaidCardPinToken}
         */
        public PrepaidCardPinToken build() {
            return new PrepaidCardPinToken(cardPinToken, url);
        }
    }
}
