/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package build.mypayquicker.platform.models;

import build.mypayquicker.platform.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for PrepaidCardResponse type.
 */
public class PrepaidCardResponse {
    private String token;
    private StatusEnum status;
    private LocalDateTime createdOn;
    private CountryTypesEnum country;
    private CurrencyTypesEnum currency;
    private PrepaidCardPersonalizationTypesEnum cardPersonalization;
    private String cardPackage;
    private CardNetworkTypesEnum cardNetwork;
    private LocalDateTime expires;
    private String cardNumber;
    private String cvv;
    private List<HaetosParams> links;

    /**
     * Default constructor.
     */
    public PrepaidCardResponse() {
    }

    /**
     * Initialization constructor.
     * @param  country  CountryTypesEnum value for country.
     * @param  token  String value for token.
     * @param  status  StatusEnum value for status.
     * @param  createdOn  LocalDateTime value for createdOn.
     * @param  currency  CurrencyTypesEnum value for currency.
     * @param  cardPersonalization  PrepaidCardPersonalizationTypesEnum value for
     *         cardPersonalization.
     * @param  cardPackage  String value for cardPackage.
     * @param  cardNetwork  CardNetworkTypesEnum value for cardNetwork.
     * @param  expires  LocalDateTime value for expires.
     * @param  cardNumber  String value for cardNumber.
     * @param  cvv  String value for cvv.
     * @param  links  List of HaetosParams value for links.
     */
    public PrepaidCardResponse(
            CountryTypesEnum country,
            String token,
            StatusEnum status,
            LocalDateTime createdOn,
            CurrencyTypesEnum currency,
            PrepaidCardPersonalizationTypesEnum cardPersonalization,
            String cardPackage,
            CardNetworkTypesEnum cardNetwork,
            LocalDateTime expires,
            String cardNumber,
            String cvv,
            List<HaetosParams> links) {
        this.token = token;
        this.status = status;
        this.createdOn = createdOn;
        this.country = country;
        this.currency = currency;
        this.cardPersonalization = cardPersonalization;
        this.cardPackage = cardPackage;
        this.cardNetwork = cardNetwork;
        this.expires = expires;
        this.cardNumber = cardNumber;
        this.cvv = cvv;
        this.links = links;
    }

    /**
     * Getter for Token.
     * Token representing the resource, prefixed with &lt;i&gt;user-&lt;/i&gt;, &lt;i&gt;dest-&lt;/i&gt;, &lt;i&gt;xfer-&lt;/i&gt;,
     * &lt;i&gt;acct-&lt;/i&gt;, &lt;i&gt;pmnt-&lt;/i&gt;, or &lt;i&gt;docu-&lt;/i&gt;.
     * @return Returns the String
     */
    @JsonGetter("token")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getToken() {
        return token;
    }

    /**
     * Setter for Token.
     * Token representing the resource, prefixed with &lt;i&gt;user-&lt;/i&gt;, &lt;i&gt;dest-&lt;/i&gt;, &lt;i&gt;xfer-&lt;/i&gt;,
     * &lt;i&gt;acct-&lt;/i&gt;, &lt;i&gt;pmnt-&lt;/i&gt;, or &lt;i&gt;docu-&lt;/i&gt;.
     * @param token Value for String
     */
    @JsonSetter("token")
    public void setToken(String token) {
        this.token = token;
    }

    /**
     * Getter for Status.
     * Current status of the prepaid card
     * @return Returns the StatusEnum
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public StatusEnum getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * Current status of the prepaid card
     * @param status Value for StatusEnum
     */
    @JsonSetter("status")
    public void setStatus(StatusEnum status) {
        this.status = status;
    }

    /**
     * Getter for CreatedOn.
     * Time at which the object was created.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("createdOn")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedOn() {
        return createdOn;
    }

    /**
     * Setter for CreatedOn.
     * Time at which the object was created.
     * @param createdOn Value for LocalDateTime
     */
    @JsonSetter("createdOn")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedOn(LocalDateTime createdOn) {
        this.createdOn = createdOn;
    }

    /**
     * Getter for Country.
     * Two-digit country code types
     * @return Returns the CountryTypesEnum
     */
    @JsonGetter("country")
    public CountryTypesEnum getCountry() {
        return country;
    }

    /**
     * Setter for Country.
     * Two-digit country code types
     * @param country Value for CountryTypesEnum
     */
    @JsonSetter("country")
    public void setCountry(CountryTypesEnum country) {
        this.country = country;
    }

    /**
     * Getter for Currency.
     * Currency code type for the object
     * @return Returns the CurrencyTypesEnum
     */
    @JsonGetter("currency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CurrencyTypesEnum getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * Currency code type for the object
     * @param currency Value for CurrencyTypesEnum
     */
    @JsonSetter("currency")
    public void setCurrency(CurrencyTypesEnum currency) {
        this.currency = currency;
    }

    /**
     * Getter for CardPersonalization.
     * Specifies a card is &lt;i&gt;Personalized&lt;/i&gt; or &lt;i&gt;Non-personalized&lt;/i&gt; (i.e., issued to Preferred
     * Customer)
     * @return Returns the PrepaidCardPersonalizationTypesEnum
     */
    @JsonGetter("cardPersonalization")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PrepaidCardPersonalizationTypesEnum getCardPersonalization() {
        return cardPersonalization;
    }

    /**
     * Setter for CardPersonalization.
     * Specifies a card is &lt;i&gt;Personalized&lt;/i&gt; or &lt;i&gt;Non-personalized&lt;/i&gt; (i.e., issued to Preferred
     * Customer)
     * @param cardPersonalization Value for PrepaidCardPersonalizationTypesEnum
     */
    @JsonSetter("cardPersonalization")
    public void setCardPersonalization(PrepaidCardPersonalizationTypesEnum cardPersonalization) {
        this.cardPersonalization = cardPersonalization;
    }

    /**
     * Getter for CardPackage.
     * Package for the card being displayed (&lt;i&gt;Virtual&lt;,i&gt;) or &lt;i&gt;Produced (physical)&lt;/i&gt;
     * @return Returns the String
     */
    @JsonGetter("cardPackage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCardPackage() {
        return cardPackage;
    }

    /**
     * Setter for CardPackage.
     * Package for the card being displayed (&lt;i&gt;Virtual&lt;,i&gt;) or &lt;i&gt;Produced (physical)&lt;/i&gt;
     * @param cardPackage Value for String
     */
    @JsonSetter("cardPackage")
    public void setCardPackage(String cardPackage) {
        this.cardPackage = cardPackage;
    }

    /**
     * Getter for CardNetwork.
     * Major credit card network types
     * @return Returns the CardNetworkTypesEnum
     */
    @JsonGetter("cardNetwork")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CardNetworkTypesEnum getCardNetwork() {
        return cardNetwork;
    }

    /**
     * Setter for CardNetwork.
     * Major credit card network types
     * @param cardNetwork Value for CardNetworkTypesEnum
     */
    @JsonSetter("cardNetwork")
    public void setCardNetwork(CardNetworkTypesEnum cardNetwork) {
        this.cardNetwork = cardNetwork;
    }

    /**
     * Getter for Expires.
     * Quote expiration, ISO-8601 format, UTC by default unless overridden.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("expires")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getExpires() {
        return expires;
    }

    /**
     * Setter for Expires.
     * Quote expiration, ISO-8601 format, UTC by default unless overridden.
     * @param expires Value for LocalDateTime
     */
    @JsonSetter("expires")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setExpires(LocalDateTime expires) {
        this.expires = expires;
    }

    /**
     * Getter for CardNumber.
     * Masked card number with only the first 6 and last 4 digits visible
     * @return Returns the String
     */
    @JsonGetter("cardNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCardNumber() {
        return cardNumber;
    }

    /**
     * Setter for CardNumber.
     * Masked card number with only the first 6 and last 4 digits visible
     * @param cardNumber Value for String
     */
    @JsonSetter("cardNumber")
    public void setCardNumber(String cardNumber) {
        this.cardNumber = cardNumber;
    }

    /**
     * Getter for Cvv.
     * Card Verification Value (CVV) on the credit card or debit card. (3-digit number on VISA®,
     * MasterCard® branded credit and debit cards)
     * @return Returns the String
     */
    @JsonGetter("cvv")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCvv() {
        return cvv;
    }

    /**
     * Setter for Cvv.
     * Card Verification Value (CVV) on the credit card or debit card. (3-digit number on VISA®,
     * MasterCard® branded credit and debit cards)
     * @param cvv Value for String
     */
    @JsonSetter("cvv")
    public void setCvv(String cvv) {
        this.cvv = cvv;
    }

    /**
     * Getter for Links.
     * @return Returns the List of HaetosParams
     */
    @JsonGetter("links")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<HaetosParams> getLinks() {
        return links;
    }

    /**
     * Setter for Links.
     * @param links Value for List of HaetosParams
     */
    @JsonSetter("links")
    public void setLinks(List<HaetosParams> links) {
        this.links = links;
    }

    /**
     * Converts this PrepaidCardResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PrepaidCardResponse [" + "country=" + country + ", token=" + token + ", status="
                + status + ", createdOn=" + createdOn + ", currency=" + currency
                + ", cardPersonalization=" + cardPersonalization + ", cardPackage=" + cardPackage
                + ", cardNetwork=" + cardNetwork + ", expires=" + expires + ", cardNumber="
                + cardNumber + ", cvv=" + cvv + ", links=" + links + "]";
    }

    /**
     * Builds a new {@link PrepaidCardResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PrepaidCardResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(country)
                .token(getToken())
                .status(getStatus())
                .createdOn(getCreatedOn())
                .currency(getCurrency())
                .cardPersonalization(getCardPersonalization())
                .cardPackage(getCardPackage())
                .cardNetwork(getCardNetwork())
                .expires(getExpires())
                .cardNumber(getCardNumber())
                .cvv(getCvv())
                .links(getLinks());
        return builder;
    }

    /**
     * Class to build instances of {@link PrepaidCardResponse}.
     */
    public static class Builder {
        private CountryTypesEnum country;
        private String token;
        private StatusEnum status;
        private LocalDateTime createdOn;
        private CurrencyTypesEnum currency;
        private PrepaidCardPersonalizationTypesEnum cardPersonalization;
        private String cardPackage;
        private CardNetworkTypesEnum cardNetwork;
        private LocalDateTime expires;
        private String cardNumber;
        private String cvv;
        private List<HaetosParams> links;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  country  CountryTypesEnum value for country.
         */
        public Builder(CountryTypesEnum country) {
            this.country = country;
        }

        /**
         * Setter for country.
         * @param  country  CountryTypesEnum value for country.
         * @return Builder
         */
        public Builder country(CountryTypesEnum country) {
            this.country = country;
            return this;
        }

        /**
         * Setter for token.
         * @param  token  String value for token.
         * @return Builder
         */
        public Builder token(String token) {
            this.token = token;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  StatusEnum value for status.
         * @return Builder
         */
        public Builder status(StatusEnum status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for createdOn.
         * @param  createdOn  LocalDateTime value for createdOn.
         * @return Builder
         */
        public Builder createdOn(LocalDateTime createdOn) {
            this.createdOn = createdOn;
            return this;
        }

        /**
         * Setter for currency.
         * @param  currency  CurrencyTypesEnum value for currency.
         * @return Builder
         */
        public Builder currency(CurrencyTypesEnum currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for cardPersonalization.
         * @param  cardPersonalization  PrepaidCardPersonalizationTypesEnum value for
         *         cardPersonalization.
         * @return Builder
         */
        public Builder cardPersonalization(
                PrepaidCardPersonalizationTypesEnum cardPersonalization) {
            this.cardPersonalization = cardPersonalization;
            return this;
        }

        /**
         * Setter for cardPackage.
         * @param  cardPackage  String value for cardPackage.
         * @return Builder
         */
        public Builder cardPackage(String cardPackage) {
            this.cardPackage = cardPackage;
            return this;
        }

        /**
         * Setter for cardNetwork.
         * @param  cardNetwork  CardNetworkTypesEnum value for cardNetwork.
         * @return Builder
         */
        public Builder cardNetwork(CardNetworkTypesEnum cardNetwork) {
            this.cardNetwork = cardNetwork;
            return this;
        }

        /**
         * Setter for expires.
         * @param  expires  LocalDateTime value for expires.
         * @return Builder
         */
        public Builder expires(LocalDateTime expires) {
            this.expires = expires;
            return this;
        }

        /**
         * Setter for cardNumber.
         * @param  cardNumber  String value for cardNumber.
         * @return Builder
         */
        public Builder cardNumber(String cardNumber) {
            this.cardNumber = cardNumber;
            return this;
        }

        /**
         * Setter for cvv.
         * @param  cvv  String value for cvv.
         * @return Builder
         */
        public Builder cvv(String cvv) {
            this.cvv = cvv;
            return this;
        }

        /**
         * Setter for links.
         * @param  links  List of HaetosParams value for links.
         * @return Builder
         */
        public Builder links(List<HaetosParams> links) {
            this.links = links;
            return this;
        }

        /**
         * Builds a new {@link PrepaidCardResponse} object using the set fields.
         * @return {@link PrepaidCardResponse}
         */
        public PrepaidCardResponse build() {
            return new PrepaidCardResponse(country, token, status, createdOn, currency,
                    cardPersonalization, cardPackage, cardNetwork, expires, cardNumber, cvv, links);
        }
    }
}
