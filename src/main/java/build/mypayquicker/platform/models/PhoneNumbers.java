/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package build.mypayquicker.platform.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for PhoneNumbers type.
 */
public class PhoneNumbers {
    private String phoneNumber;
    private String mobileNumber;
    private CountryTypesEnum phoneNumberCountry;
    private CountryTypesEnum mobileNumberCountry;

    /**
     * Default constructor.
     */
    public PhoneNumbers() {
    }

    /**
     * Initialization constructor.
     * @param  phoneNumber  String value for phoneNumber.
     * @param  mobileNumber  String value for mobileNumber.
     * @param  phoneNumberCountry  CountryTypesEnum value for phoneNumberCountry.
     * @param  mobileNumberCountry  CountryTypesEnum value for mobileNumberCountry.
     */
    public PhoneNumbers(
            String phoneNumber,
            String mobileNumber,
            CountryTypesEnum phoneNumberCountry,
            CountryTypesEnum mobileNumberCountry) {
        this.phoneNumber = phoneNumber;
        this.mobileNumber = mobileNumber;
        this.phoneNumberCountry = phoneNumberCountry;
        this.mobileNumberCountry = mobileNumberCountry;
    }

    /**
     * Getter for PhoneNumber.
     * The E.164 formatted primary phone number. This can be the same as the mobile number.
     * @return Returns the String
     */
    @JsonGetter("phoneNumber")
    public String getPhoneNumber() {
        return phoneNumber;
    }

    /**
     * Setter for PhoneNumber.
     * The E.164 formatted primary phone number. This can be the same as the mobile number.
     * @param phoneNumber Value for String
     */
    @JsonSetter("phoneNumber")
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    /**
     * Getter for MobileNumber.
     * The E.164 formatted mobile phone number, required by most financial institutions for account
     * creation, verification, or PSD2 (3DS). Mobile numbers must be unique to a user within a
     * tenant and cannot be shared.
     * @return Returns the String
     */
    @JsonGetter("mobileNumber")
    public String getMobileNumber() {
        return mobileNumber;
    }

    /**
     * Setter for MobileNumber.
     * The E.164 formatted mobile phone number, required by most financial institutions for account
     * creation, verification, or PSD2 (3DS). Mobile numbers must be unique to a user within a
     * tenant and cannot be shared.
     * @param mobileNumber Value for String
     */
    @JsonSetter("mobileNumber")
    public void setMobileNumber(String mobileNumber) {
        this.mobileNumber = mobileNumber;
    }

    /**
     * Getter for PhoneNumberCountry.
     * Two-digit country code types
     * @return Returns the CountryTypesEnum
     */
    @JsonGetter("phoneNumberCountry")
    public CountryTypesEnum getPhoneNumberCountry() {
        return phoneNumberCountry;
    }

    /**
     * Setter for PhoneNumberCountry.
     * Two-digit country code types
     * @param phoneNumberCountry Value for CountryTypesEnum
     */
    @JsonSetter("phoneNumberCountry")
    public void setPhoneNumberCountry(CountryTypesEnum phoneNumberCountry) {
        this.phoneNumberCountry = phoneNumberCountry;
    }

    /**
     * Getter for MobileNumberCountry.
     * Two-digit country code types
     * @return Returns the CountryTypesEnum
     */
    @JsonGetter("mobileNumberCountry")
    public CountryTypesEnum getMobileNumberCountry() {
        return mobileNumberCountry;
    }

    /**
     * Setter for MobileNumberCountry.
     * Two-digit country code types
     * @param mobileNumberCountry Value for CountryTypesEnum
     */
    @JsonSetter("mobileNumberCountry")
    public void setMobileNumberCountry(CountryTypesEnum mobileNumberCountry) {
        this.mobileNumberCountry = mobileNumberCountry;
    }

    /**
     * Converts this PhoneNumbers into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PhoneNumbers [" + "phoneNumber=" + phoneNumber + ", mobileNumber=" + mobileNumber
                + ", phoneNumberCountry=" + phoneNumberCountry + ", mobileNumberCountry="
                + mobileNumberCountry + "]";
    }

    /**
     * Builds a new {@link PhoneNumbers.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PhoneNumbers.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(phoneNumber, mobileNumber, phoneNumberCountry,
                mobileNumberCountry);
        return builder;
    }

    /**
     * Class to build instances of {@link PhoneNumbers}.
     */
    public static class Builder {
        private String phoneNumber;
        private String mobileNumber;
        private CountryTypesEnum phoneNumberCountry;
        private CountryTypesEnum mobileNumberCountry;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  phoneNumber  String value for phoneNumber.
         * @param  mobileNumber  String value for mobileNumber.
         * @param  phoneNumberCountry  CountryTypesEnum value for phoneNumberCountry.
         * @param  mobileNumberCountry  CountryTypesEnum value for mobileNumberCountry.
         */
        public Builder(String phoneNumber, String mobileNumber, CountryTypesEnum phoneNumberCountry,
                CountryTypesEnum mobileNumberCountry) {
            this.phoneNumber = phoneNumber;
            this.mobileNumber = mobileNumber;
            this.phoneNumberCountry = phoneNumberCountry;
            this.mobileNumberCountry = mobileNumberCountry;
        }

        /**
         * Setter for phoneNumber.
         * @param  phoneNumber  String value for phoneNumber.
         * @return Builder
         */
        public Builder phoneNumber(String phoneNumber) {
            this.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * Setter for mobileNumber.
         * @param  mobileNumber  String value for mobileNumber.
         * @return Builder
         */
        public Builder mobileNumber(String mobileNumber) {
            this.mobileNumber = mobileNumber;
            return this;
        }

        /**
         * Setter for phoneNumberCountry.
         * @param  phoneNumberCountry  CountryTypesEnum value for phoneNumberCountry.
         * @return Builder
         */
        public Builder phoneNumberCountry(CountryTypesEnum phoneNumberCountry) {
            this.phoneNumberCountry = phoneNumberCountry;
            return this;
        }

        /**
         * Setter for mobileNumberCountry.
         * @param  mobileNumberCountry  CountryTypesEnum value for mobileNumberCountry.
         * @return Builder
         */
        public Builder mobileNumberCountry(CountryTypesEnum mobileNumberCountry) {
            this.mobileNumberCountry = mobileNumberCountry;
            return this;
        }

        /**
         * Builds a new {@link PhoneNumbers} object using the set fields.
         * @return {@link PhoneNumbers}
         */
        public PhoneNumbers build() {
            return new PhoneNumbers(phoneNumber, mobileNumber, phoneNumberCountry,
                    mobileNumberCountry);
        }
    }
}
