/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package build.mypayquicker.platform.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for TransferBaseExt type.
 */
public class TransferBaseExt {
    private String sourceToken;
    private String destinationToken;
    private String notes;
    private String memo;
    private Double destinationAmount;
    private CurrencyTypesEnum destinationCurrency;
    private String clientTransferId;
    private String token;

    /**
     * Default constructor.
     */
    public TransferBaseExt() {
    }

    /**
     * Initialization constructor.
     * @param  sourceToken  String value for sourceToken.
     * @param  destinationToken  String value for destinationToken.
     * @param  notes  String value for notes.
     * @param  memo  String value for memo.
     * @param  destinationAmount  Double value for destinationAmount.
     * @param  destinationCurrency  CurrencyTypesEnum value for destinationCurrency.
     * @param  clientTransferId  String value for clientTransferId.
     * @param  token  String value for token.
     */
    public TransferBaseExt(
            String sourceToken,
            String destinationToken,
            String notes,
            String memo,
            Double destinationAmount,
            CurrencyTypesEnum destinationCurrency,
            String clientTransferId,
            String token) {
        this.sourceToken = sourceToken;
        this.destinationToken = destinationToken;
        this.notes = notes;
        this.memo = memo;
        this.destinationAmount = destinationAmount;
        this.destinationCurrency = destinationCurrency;
        this.clientTransferId = clientTransferId;
        this.token = token;
    }

    /**
     * Getter for SourceToken.
     * Unique identifier representing the source of funds.
     * @return Returns the String
     */
    @JsonGetter("sourceToken")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSourceToken() {
        return sourceToken;
    }

    /**
     * Setter for SourceToken.
     * Unique identifier representing the source of funds.
     * @param sourceToken Value for String
     */
    @JsonSetter("sourceToken")
    public void setSourceToken(String sourceToken) {
        this.sourceToken = sourceToken;
    }

    /**
     * Getter for DestinationToken.
     * Unique identifier representing the destination of funds.
     * @return Returns the String
     */
    @JsonGetter("destinationToken")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDestinationToken() {
        return destinationToken;
    }

    /**
     * Setter for DestinationToken.
     * Unique identifier representing the destination of funds.
     * @param destinationToken Value for String
     */
    @JsonSetter("destinationToken")
    public void setDestinationToken(String destinationToken) {
        this.destinationToken = destinationToken;
    }

    /**
     * Getter for Notes.
     * Optional comments visible to the user.
     * @return Returns the String
     */
    @JsonGetter("notes")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getNotes() {
        return notes;
    }

    /**
     * Setter for Notes.
     * Optional comments visible to the user.
     * @param notes Value for String
     */
    @JsonSetter("notes")
    public void setNotes(String notes) {
        this.notes = notes;
    }

    /**
     * Getter for Memo.
     * Optional internal memo not visible to the user.
     * @return Returns the String
     */
    @JsonGetter("memo")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMemo() {
        return memo;
    }

    /**
     * Setter for Memo.
     * Optional internal memo not visible to the user.
     * @param memo Value for String
     */
    @JsonSetter("memo")
    public void setMemo(String memo) {
        this.memo = memo;
    }

    /**
     * Getter for DestinationAmount.
     * Amount transferred to the destination
     * @return Returns the Double
     */
    @JsonGetter("destinationAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getDestinationAmount() {
        return destinationAmount;
    }

    /**
     * Setter for DestinationAmount.
     * Amount transferred to the destination
     * @param destinationAmount Value for Double
     */
    @JsonSetter("destinationAmount")
    public void setDestinationAmount(Double destinationAmount) {
        this.destinationAmount = destinationAmount;
    }

    /**
     * Getter for DestinationCurrency.
     * Currency code type for the object
     * @return Returns the CurrencyTypesEnum
     */
    @JsonGetter("destinationCurrency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CurrencyTypesEnum getDestinationCurrency() {
        return destinationCurrency;
    }

    /**
     * Setter for DestinationCurrency.
     * Currency code type for the object
     * @param destinationCurrency Value for CurrencyTypesEnum
     */
    @JsonSetter("destinationCurrency")
    public void setDestinationCurrency(CurrencyTypesEnum destinationCurrency) {
        this.destinationCurrency = destinationCurrency;
    }

    /**
     * Getter for ClientTransferId.
     * Unique value provided by the client for the transfer.
     * @return Returns the String
     */
    @JsonGetter("clientTransferId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getClientTransferId() {
        return clientTransferId;
    }

    /**
     * Setter for ClientTransferId.
     * Unique value provided by the client for the transfer.
     * @param clientTransferId Value for String
     */
    @JsonSetter("clientTransferId")
    public void setClientTransferId(String clientTransferId) {
        this.clientTransferId = clientTransferId;
    }

    /**
     * Getter for Token.
     * Token representing the resource, prefixed with &lt;i&gt;user-&lt;/i&gt;, &lt;i&gt;dest-&lt;/i&gt;, &lt;i&gt;xfer-&lt;/i&gt;,
     * &lt;i&gt;acct-&lt;/i&gt;, &lt;i&gt;pmnt-&lt;/i&gt;, or &lt;i&gt;docu-&lt;/i&gt;.
     * @return Returns the String
     */
    @JsonGetter("token")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getToken() {
        return token;
    }

    /**
     * Setter for Token.
     * Token representing the resource, prefixed with &lt;i&gt;user-&lt;/i&gt;, &lt;i&gt;dest-&lt;/i&gt;, &lt;i&gt;xfer-&lt;/i&gt;,
     * &lt;i&gt;acct-&lt;/i&gt;, &lt;i&gt;pmnt-&lt;/i&gt;, or &lt;i&gt;docu-&lt;/i&gt;.
     * @param token Value for String
     */
    @JsonSetter("token")
    public void setToken(String token) {
        this.token = token;
    }

    /**
     * Converts this TransferBaseExt into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TransferBaseExt [" + "sourceToken=" + sourceToken + ", destinationToken="
                + destinationToken + ", notes=" + notes + ", memo=" + memo + ", destinationAmount="
                + destinationAmount + ", destinationCurrency=" + destinationCurrency
                + ", clientTransferId=" + clientTransferId + ", token=" + token + "]";
    }

    /**
     * Builds a new {@link TransferBaseExt.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link TransferBaseExt.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .sourceToken(getSourceToken())
                .destinationToken(getDestinationToken())
                .notes(getNotes())
                .memo(getMemo())
                .destinationAmount(getDestinationAmount())
                .destinationCurrency(getDestinationCurrency())
                .clientTransferId(getClientTransferId())
                .token(getToken());
        return builder;
    }

    /**
     * Class to build instances of {@link TransferBaseExt}.
     */
    public static class Builder {
        private String sourceToken;
        private String destinationToken;
        private String notes;
        private String memo;
        private Double destinationAmount;
        private CurrencyTypesEnum destinationCurrency;
        private String clientTransferId;
        private String token;



        /**
         * Setter for sourceToken.
         * @param  sourceToken  String value for sourceToken.
         * @return Builder
         */
        public Builder sourceToken(String sourceToken) {
            this.sourceToken = sourceToken;
            return this;
        }

        /**
         * Setter for destinationToken.
         * @param  destinationToken  String value for destinationToken.
         * @return Builder
         */
        public Builder destinationToken(String destinationToken) {
            this.destinationToken = destinationToken;
            return this;
        }

        /**
         * Setter for notes.
         * @param  notes  String value for notes.
         * @return Builder
         */
        public Builder notes(String notes) {
            this.notes = notes;
            return this;
        }

        /**
         * Setter for memo.
         * @param  memo  String value for memo.
         * @return Builder
         */
        public Builder memo(String memo) {
            this.memo = memo;
            return this;
        }

        /**
         * Setter for destinationAmount.
         * @param  destinationAmount  Double value for destinationAmount.
         * @return Builder
         */
        public Builder destinationAmount(Double destinationAmount) {
            this.destinationAmount = destinationAmount;
            return this;
        }

        /**
         * Setter for destinationCurrency.
         * @param  destinationCurrency  CurrencyTypesEnum value for destinationCurrency.
         * @return Builder
         */
        public Builder destinationCurrency(CurrencyTypesEnum destinationCurrency) {
            this.destinationCurrency = destinationCurrency;
            return this;
        }

        /**
         * Setter for clientTransferId.
         * @param  clientTransferId  String value for clientTransferId.
         * @return Builder
         */
        public Builder clientTransferId(String clientTransferId) {
            this.clientTransferId = clientTransferId;
            return this;
        }

        /**
         * Setter for token.
         * @param  token  String value for token.
         * @return Builder
         */
        public Builder token(String token) {
            this.token = token;
            return this;
        }

        /**
         * Builds a new {@link TransferBaseExt} object using the set fields.
         * @return {@link TransferBaseExt}
         */
        public TransferBaseExt build() {
            return new TransferBaseExt(sourceToken, destinationToken, notes, memo,
                    destinationAmount, destinationCurrency, clientTransferId, token);
        }
    }
}
