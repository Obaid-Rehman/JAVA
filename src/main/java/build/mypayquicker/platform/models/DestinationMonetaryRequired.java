/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package build.mypayquicker.platform.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for DestinationMonetaryRequired type.
 */
public class DestinationMonetaryRequired {
    private Double destinationAmount;
    private CurrencyTypesEnum destinationCurrency;

    /**
     * Default constructor.
     */
    public DestinationMonetaryRequired() {
    }

    /**
     * Initialization constructor.
     * @param  destinationAmount  Double value for destinationAmount.
     * @param  destinationCurrency  CurrencyTypesEnum value for destinationCurrency.
     */
    public DestinationMonetaryRequired(
            Double destinationAmount,
            CurrencyTypesEnum destinationCurrency) {
        this.destinationAmount = destinationAmount;
        this.destinationCurrency = destinationCurrency;
    }

    /**
     * Getter for DestinationAmount.
     * Amount transferred to the destination
     * @return Returns the Double
     */
    @JsonGetter("destinationAmount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Double getDestinationAmount() {
        return destinationAmount;
    }

    /**
     * Setter for DestinationAmount.
     * Amount transferred to the destination
     * @param destinationAmount Value for Double
     */
    @JsonSetter("destinationAmount")
    public void setDestinationAmount(Double destinationAmount) {
        this.destinationAmount = destinationAmount;
    }

    /**
     * Getter for DestinationCurrency.
     * Currency code type for the object
     * @return Returns the CurrencyTypesEnum
     */
    @JsonGetter("destinationCurrency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CurrencyTypesEnum getDestinationCurrency() {
        return destinationCurrency;
    }

    /**
     * Setter for DestinationCurrency.
     * Currency code type for the object
     * @param destinationCurrency Value for CurrencyTypesEnum
     */
    @JsonSetter("destinationCurrency")
    public void setDestinationCurrency(CurrencyTypesEnum destinationCurrency) {
        this.destinationCurrency = destinationCurrency;
    }

    /**
     * Converts this DestinationMonetaryRequired into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DestinationMonetaryRequired [" + "destinationAmount=" + destinationAmount
                + ", destinationCurrency=" + destinationCurrency + "]";
    }

    /**
     * Builds a new {@link DestinationMonetaryRequired.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DestinationMonetaryRequired.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .destinationAmount(getDestinationAmount())
                .destinationCurrency(getDestinationCurrency());
        return builder;
    }

    /**
     * Class to build instances of {@link DestinationMonetaryRequired}.
     */
    public static class Builder {
        private Double destinationAmount;
        private CurrencyTypesEnum destinationCurrency;



        /**
         * Setter for destinationAmount.
         * @param  destinationAmount  Double value for destinationAmount.
         * @return Builder
         */
        public Builder destinationAmount(Double destinationAmount) {
            this.destinationAmount = destinationAmount;
            return this;
        }

        /**
         * Setter for destinationCurrency.
         * @param  destinationCurrency  CurrencyTypesEnum value for destinationCurrency.
         * @return Builder
         */
        public Builder destinationCurrency(CurrencyTypesEnum destinationCurrency) {
            this.destinationCurrency = destinationCurrency;
            return this;
        }

        /**
         * Builds a new {@link DestinationMonetaryRequired} object using the set fields.
         * @return {@link DestinationMonetaryRequired}
         */
        public DestinationMonetaryRequired build() {
            return new DestinationMonetaryRequired(destinationAmount, destinationCurrency);
        }
    }
}
