/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package build.mypayquicker.platform.controllers;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import build.mypayquicker.platform.PQAPIV2Client;
import build.mypayquicker.platform.exceptions.ApiException;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

public class ProgramControllerTest extends BaseControllerTest {

    /**
     * Client instance.
     */
    private static PQAPIV2Client client;
    
    /**
     * Controller instance (for all tests).
     */
    private static ProgramController controller;

    /**
     * Setup test class.
     */
    @BeforeClass
    public static void setUpClass() {
        client = createConfiguration();
        controller = client.getProgramController();
    }

    /**
     * Tear down test class.
     */
    @AfterClass
    public static void tearDownClass() {
        controller = null;
    }

    /**
     * Retrieve a list of all programs that supports filtering, sorting, and pagination through
     * existing mechanisms.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestListPrograms() throws Exception {

        // Set callback and perform API call
        try {
            controller.listPrograms();
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

    }

    /**
     * Retrieve a single program configuration.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestRetrieveProgram() throws Exception {
        // Parameters for the API call
        String progToken = 
                "prog-4525ab9c-5b22-4e30-028a-45901a10aa0c";

        // Set callback and perform API call
        try {
            controller.retrieveProgram(progToken);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

    }

    /**
     * Retrieve a single program agreement.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testTestRetrieveProgramAgreement() throws Exception {
        // Parameters for the API call
        String progToken = 
                "prog-4525ab9c-5b22-4e30-028a-45901a10aa0c";
        String agmtToken = 
                "agmt-45901a10-5b22-4e30-028a-45901a10baa9";

        // Set callback and perform API call
        try {
            controller.retrieveProgramAgreement(progToken, agmtToken);
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

    }

}
